{"ast":null,"code":"var _jsxFileName = \"/home/sbh/Downloads/MERN-Stack-Tutorial-lesson-14/frontend/src/components/EditWorkout.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useWorkoutsContext } from '../hooks/useWorkoutsContext';\nimport { useNavigate, useLocation } from 'react-router-dom'; // import WorkoutDetails from './WorkoutDetails'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditWorkout = _ref => {\n  _s();\n\n  let {\n    workout\n  } = _ref;\n  const {\n    dispatch\n  } = useWorkoutsContext();\n  const location = useLocation();\n  const naviagate = useNavigate();\n  const [title, setTitle] = useState(location.state.title);\n  const [load, setLoad] = useState(location.state.load);\n  const [reps, setReps] = useState(location.state.reps);\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Check for empty fields\n\n    const fields = {\n      title,\n      load,\n      reps\n    };\n    const emptyFields = Object.keys(fields).filter(key => !fields[key]);\n    setEmptyFields(emptyFields);\n\n    if (emptyFields.length > 0) {\n      setError('Please fill in all fields.');\n      return;\n    } // Perform the update\n\n\n    const response = await fetch('/api/workouts/' + location.state._id, {\n      method: 'PATCH',\n      body: JSON.stringify(fields),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json(); // Dispatch the 'UPDATE_WORKOUT' action\n\n    dispatch({\n      type: 'UPDATE_WORKOUT',\n      payload: updatedWorkout\n    }); // Navigate back to the main page or any other appropriate route\n\n    naviagate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Excersize Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"titile\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      className: emptyFields.includes('title') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Load (in kg):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"load\",\n      onChange: e => setLoad(e.target.value),\n      value: load,\n      className: emptyFields.includes('load') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Number of Reps:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"reps\",\n      onChange: e => setReps(e.target.value),\n      value: reps,\n      className: emptyFields.includes('reps') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditWorkout, \"vp/NGG7pmaNGpFZ1SeYwBxW3xNI=\", false, function () {\n  return [useWorkoutsContext, useLocation, useNavigate];\n});\n\n_c = EditWorkout;\nexport default EditWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditWorkout\");","map":{"version":3,"names":["useState","useWorkoutsContext","useNavigate","useLocation","EditWorkout","workout","dispatch","location","naviagate","title","setTitle","state","load","setLoad","reps","setReps","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","fields","Object","keys","filter","key","length","response","fetch","_id","method","body","JSON","stringify","headers","json","type","payload","updatedWorkout","target","value","includes"],"sources":["/home/sbh/Downloads/MERN-Stack-Tutorial-lesson-14/frontend/src/components/EditWorkout.js"],"sourcesContent":["import { useState } from 'react'\nimport { useWorkoutsContext } from '../hooks/useWorkoutsContext'\nimport { useNavigate , useLocation} from 'react-router-dom'\n// import WorkoutDetails from './WorkoutDetails'\n\nconst EditWorkout = ({workout}) =>{\n  const {dispatch } = useWorkoutsContext()\n  const location = useLocation()\n  const naviagate = useNavigate()\n\n  const [title, setTitle] = useState(location.state.title)\n  const [load, setLoad] = useState(location.state.load)\n  const [reps, setReps] = useState(location.state.reps)\n  const [error, setError] = useState(null)\n  const [emptyFields, setEmptyFields] = useState([])\n  \n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    // Check for empty fields\n    const fields = { title, load, reps };\n    const emptyFields = Object.keys(fields).filter((key) => !fields[key]);\n    setEmptyFields(emptyFields);\n\n    if (emptyFields.length > 0) {\n      setError('Please fill in all fields.');\n      return;\n    }\n\n    // Perform the update\n    \n    const response = await fetch('/api/workouts/' + location.state._id, {\n        method: 'PATCH',\n        body: JSON.stringify(fields),\n        headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const json = await response.json()\n\n    // Dispatch the 'UPDATE_WORKOUT' action\n    dispatch({\n      type: 'UPDATE_WORKOUT',\n      payload: updatedWorkout,\n    });\n\n    // Navigate back to the main page or any other appropriate route\n    naviagate(\"/\")\n\n  }\n\n  return (\n    <form className=\"create\" onSubmit={handleSubmit}> \n      <h3>Edit Workout</h3>\n\n      <label>Excersize Title:</label>\n      <input \n        type=\"text\" \n        name=\"titile\"\n        onChange={(e) => setTitle(e.target.value)} \n        value={title}\n        className={emptyFields.includes('title') ? 'error' : ''}\n      />\n\n      <label>Load (in kg):</label>\n      <input \n        type=\"number\" \n        name =\"load\"\n        onChange={(e) => setLoad(e.target.value)} \n        value={load}\n        className={emptyFields.includes('load') ? 'error' : ''}\n      />\n\n      <label>Number of Reps:</label>\n      <input \n        type=\"number\" \n        name = \"reps\"\n        onChange={(e) => setReps(e.target.value)} \n        value={reps}\n        className={emptyFields.includes('reps') ? 'error' : ''}\n      />\n\n      <button type='submit'>Update Workout</button>\n      {error && <div className=\"error\">{error}</div>}\n    </form>\n  )\n}\n\nexport default EditWorkout"],"mappings":"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"},"metadata":{},"sourceType":"module"}