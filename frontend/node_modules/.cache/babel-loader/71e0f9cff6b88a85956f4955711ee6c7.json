{"ast":null,"code":"var _jsxFileName = \"/home/sbh/Downloads/MERN-Stack-Tutorial-lesson-14/frontend/src/components/EditWorkout.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useWorkoutsContext } from '../hooks/useWorkoutsContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditWorkout = _ref => {\n  _s();\n\n  let {\n    workout\n  } = _ref;\n  const {\n    dispatch\n  } = useWorkoutsContext();\n  console.log('esdf');\n  const [title, setTitle] = useState(workout.title);\n  const [load, setLoad] = useState(workout.load);\n  const [reps, setReps] = useState(workout.reps);\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const naviagate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Check for empty fields\n\n    const fields = {\n      title,\n      load,\n      reps\n    };\n    const emptyFields = Object.keys(fields).filter(key => !fields[key]);\n    setEmptyFields(emptyFields);\n\n    if (emptyFields.length > 0) {\n      setError('Please fill in all fields.');\n      return;\n    } // Perform the update\n\n\n    const updatedWorkout = { ...workout,\n      title,\n      load,\n      reps\n    }; // Dispatch the 'UPDATE_WORKOUT' action\n\n    dispatch({\n      type: 'UPDATE_WORKOUT',\n      payload: updatedWorkout\n    }); // Navigate back to the main page or any other appropriate route\n\n    naviagate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Excersize Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"titile\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      className: emptyFields.includes('title') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Load (in kg):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"load\",\n      onChange: e => setLoad(e.target.value),\n      value: load,\n      className: emptyFields.includes('load') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Number of Reps:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"reps\",\n      onChange: e => setReps(e.target.value),\n      value: reps,\n      className: emptyFields.includes('reps') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Update Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditWorkout, \"hXefFN8XWm7TbY5SxttGxyxcNEI=\", false, function () {\n  return [useWorkoutsContext, useNavigate];\n});\n\n_c = EditWorkout;\nexport default EditWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditWorkout\");","map":{"version":3,"names":["useState","useWorkoutsContext","useNavigate","EditWorkout","workout","dispatch","console","log","title","setTitle","load","setLoad","reps","setReps","error","setError","emptyFields","setEmptyFields","naviagate","handleSubmit","e","preventDefault","fields","Object","keys","filter","key","length","updatedWorkout","type","payload","target","value","includes"],"sources":["/home/sbh/Downloads/MERN-Stack-Tutorial-lesson-14/frontend/src/components/EditWorkout.js"],"sourcesContent":["import { useState } from 'react'\nimport { useWorkoutsContext } from '../hooks/useWorkoutsContext'\nimport { useNavigate } from 'react-router-dom'\n\nconst EditWorkout = ({ workout }) =>{\n  const { dispatch } = useWorkoutsContext()\n  console.log('esdf')\n\n  const [title, setTitle] = useState(workout.title)\n  const [load, setLoad] = useState(workout.load)\n  const [reps, setReps] = useState(workout.reps)\n  const [error, setError] = useState(null)\n  const [emptyFields, setEmptyFields] = useState([])\n  const naviagate = useNavigate()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    // Check for empty fields\n    const fields = { title, load, reps };\n    const emptyFields = Object.keys(fields).filter((key) => !fields[key]);\n    setEmptyFields(emptyFields);\n\n    if (emptyFields.length > 0) {\n      setError('Please fill in all fields.');\n      return;\n    }\n\n    // Perform the update\n    const updatedWorkout = {\n      ...workout,\n      title,\n      load,\n      reps,\n    };\n\n    // Dispatch the 'UPDATE_WORKOUT' action\n    dispatch({\n      type: 'UPDATE_WORKOUT',\n      payload: updatedWorkout,\n    });\n\n    // Navigate back to the main page or any other appropriate route\n    naviagate(\"/\")\n\n  }\n\n  return (\n    <form className=\"create\" onSubmit={handleSubmit}> \n      <h3>Edit Workout</h3>\n\n      <label>Excersize Title:</label>\n      <input \n        type=\"text\" \n        name=\"titile\"\n        onChange={(e) => setTitle(e.target.value)} \n        value={title}\n        className={emptyFields.includes('title') ? 'error' : ''}\n      />\n\n      <label>Load (in kg):</label>\n      <input \n        type=\"number\" \n        name =\"load\"\n        onChange={(e) => setLoad(e.target.value)} \n        value={load}\n        className={emptyFields.includes('load') ? 'error' : ''}\n      />\n\n      <label>Number of Reps:</label>\n      <input \n        type=\"number\" \n        name = \"reps\"\n        onChange={(e) => setReps(e.target.value)} \n        value={reps}\n        className={emptyFields.includes('reps') ? 'error' : ''}\n      />\n\n      <button>Update Workout</button>\n      {error && <div className=\"error\">{error}</div>}\n    </form>\n  )\n}\n\nexport default EditWorkout"],"mappings":"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"},"metadata":{},"sourceType":"module"}